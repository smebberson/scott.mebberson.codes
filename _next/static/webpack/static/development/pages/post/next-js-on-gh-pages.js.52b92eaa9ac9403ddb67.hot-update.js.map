{"version":3,"file":"static/webpack/static/development/pages/post/next-js-on-gh-pages.js.52b92eaa9ac9403ddb67.hot-update.js","sources":["webpack:///./pages/post/next-js-on-gh-pages.js"],"sourcesContent":["import { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport bash from 'react-syntax-highlighter/dist/languages/prism/bash';\nimport prism from 'react-syntax-highlighter/dist/styles/prism/prism';\n\nimport withPostProps from '../../lib/with-post-props';\nimport Bonus from '../../components/Bonus';\nimport External from '../../components/External';\nimport Inline from '../../components/Inline';\nimport Post from '../../components/Post';\n\nSyntaxHighlighter.registerLanguage('bash', bash);\n\nconst setupOut = `# Remove files from the out directory\n$ rm -rf ./out/\n\n# Exclude the out directory from Git\n$ echo \"out/\" >> .gitignore\n$ git add .\n$ git commit -m \"Ignore the out directory.\"\n\n# Create an orphan branch named gh-pages\n$ git checkout --orphan gh-pages\n\n# Remove all staged files\n$ git rm -rf .\n\n# Create an empty commit (remember this is the gh-page branch)\n$ git add .\n$ git commit --allow-empty -m \"Initial empty branch\"\n\n# Push the branch\n$ git push origin gh-pages\n`;\n\nconst setupGitWorkTree = `# Go back to master\n$ git checkout master\n\n# Create the Git Worktree\n$ git worktree add out gh-pages`;\n\nconst setupGhPages = `# Add a .nojekyll file to out\ntouch ./out/.nojekyll\n`;\n\nconst updateGhPages = `# Build and generate an export\n$ yarn build\n$ yarn export\n\n# Push the updated site to GitHub pages\n$ cd ./out\n$ git add .\n$ git commit -m \"Deploy to gh-pages üöÄ\"\n$ git push origin gh-pages\n`;\n\nexport default withPostProps(({ post }) => (\n\n    <Post post={ post }>\n\n        <div className=\"constrained\">\n\n            <p>So, you've built an amazing Next.js site. But where do you host it?</p>\n\n            <p>For free, on GitHub Pages of course üòÄ</p>\n\n            <p>There's always a caveat... this only works if you can statically export your site. <External href=\"https://nextjs.org/docs/#static-html-export\">Read more about it on next.js</External>. If you can, then you're good to go.</p>\n\n            <p><External href=\"https://nextjs.org/docs/#usage\">Follow the steps</External> to create <Inline>exportPathMap</Inline> in <Inline>next.config.js</Inline> add <Inline>next build</Inline> and <Inline>next export</Inline> scripts to <Inline>package.json</Inline>.</p>\n\n            <p>All done? You should now have an <Inline>./out</Inline> directory with your entire website in it.</p>\n\n            <Bonus>I use the <Inline>serve</Inline> module to test the <Inline>out</Inline> directory has everything it needs. Make sure you test loading specific URLs to ensure a direct page load works (versus client side navigation).</Bonus>\n\n            <p>Now comes the tricky part... setting up GitHub Pages.</p>\n\n            <p>Here is how it's going to work:</p>\n\n            <ul>\n\n                <li>Next.js will produce a static version of the site in the <Inline>out</Inline> directory.</li>\n\n                <li>We'll alias the <Inline>out</Inline> directory to a <Inline>gh-pages</Inline> branch.</li>\n\n                <li>We'll then push the contents of the <Inline>gh-pages</Inline> to GitHub to update the site.</li>\n\n            </ul>\n\n            <Bonus>The following will only work if you're intending to use a user or organisation pages site, or a project pages site with a custom domain. If you intend on using a project pages site with the standard GitHub domain (i.e. <Inline>https://\\{'{'}username{'}'}.github.com/{'{'}reponame{'}'}</Inline>) then there are a few extra steps to complete.</Bonus>\n\n            <p>Okay, let's get started by preparing the <Inline>out</Inline> directory:</p>\n\n            <SyntaxHighlighter language=\"shell\" style={ prism }>{ setupOut }</SyntaxHighlighter>\n\n            <p>Now we can create the Git worktree:</p>\n\n            <SyntaxHighlighter language=\"shell\" style={ prism }>{ setupGitWorkTree }</SyntaxHighlighter>\n\n            <p>Let's take a moment here to explore this...</p>\n\n            <p>If you run <Inline>git branch</Inline> you should be on <Inline>master</Inline>. Now change into the <Inline>out</Inline> directory and run <Inline>git branch</Inline>, you should be on the <Inline>gh-pages</Inline> branch. So the <Inline>out</Inline> directory has been directly aliased to the <Inline>gh-pages</Inline> directory. That's kinda neat.</p>\n\n            <p>Let's setup the out directory ready for <Inline>gh-pages</Inline>:</p>\n\n            <SyntaxHighlighter language=\"shell\" style={ prism }>{ setupGhPages }</SyntaxHighlighter>\n\n            <p>With the hard part out of the way üòÖ, do the following every time you want to deploy a new version of your site:</p>\n\n            <SyntaxHighlighter language=\"shell\" style={ prism }>{ updateGhPages }</SyntaxHighlighter>\n\n            <p>Now you'll need to setup GitHub Pages. <External href=\"https://help.github.com/en/articles/configuring-a-publishing-source-for-github-pages\">GitHub have a guide for configuring a publishing source for GitHub pages</External>, you should be able to follow that. They also have <External href=\"https://help.github.com/en/articles/quick-start-setting-up-a-custom-domain\">a guide for setting up a custom domain</External>.</p>\n\n            <p>...‚òïÔ∏è‚òïÔ∏è... Ô∏è?</p>\n\n            <p>And hey presto, your Next.js site should be super zippy üöÄ on the GitHub Pages platform.</p>\n\n        </div>\n\n    </Post>\n\n));"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAssourceRoot":""}